import tkinter as tk
from tkinter import messagebox

class TodoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do Application")
        
        self.todos = {}
        self.load_todos()
        
        self.category_var = tk.StringVar()
        self.task_var = tk.StringVar()
        
        self.category_entry = tk.Entry(root, textvariable=self.category_var, width=50)
        self.category_entry.pack(pady=5)
        
        self.task_entry = tk.Entry(root, textvariable=self.task_var, width=50)
        self.task_entry.pack(pady=5)
        
        self.add_button = tk.Button(root, text="Add Task", command=self.add_task)
        self.add_button.pack(pady=5)
        
        self.task_listbox = tk.Listbox(root, width=50)
        self.task_listbox.pack(pady=5)
        
        self.delete_button = tk.Button(root, text="Delete Task", command=self.delete_task)
        self.delete_button.pack(pady=5)
        
        self.load_tasks()
    
    def load_todos(self):
        try:
            with open("todos.txt", "r") as file:
                self.todos = eval(file.read())
                self.update_task_listbox()
        except FileNotFoundError:
            pass
    
    def save_todos(self):
        with open("todos.txt", "w") as file:
            file.write(str(self.todos))
    
    def update_task_listbox(self):
        self.task_listbox.delete(0, tk.END)
        for category, tasks in self.todos.items():
            for task in tasks:
                self.task_listbox.insert(tk.END, f"{category}: {task}")
    
    def add_task(self):
        category = self.category_var.get()
        task = self.task_var.get()
        if category and task:
            if category not in self.todos:
                self.todos[category] = []
            self.todos[category].append(task)
            self.save_todos()
            self.update_task_listbox()
            self.task_var.set("")
            messagebox.showinfo("Success", "Task added successfully!")
        else:
            messagebox.showwarning("Warning", "Category and Task cannot be empty!")
    
    def delete_task(self):
        selected_task_index = self.task_listbox.curselection()
        if selected_task_index:
            task_index = selected_task_index[0]
            selected_task = self.task_listbox.get(task_index)
            category, task = selected_task.split(": ")
            self.todos[category].remove(task)
            if not self.todos[category]:
                del self.todos[category]
            self.save_todos()
            self.update_task_listbox()
            messagebox.showinfo("Success", "Task deleted successfully!")
        else:
            messagebox.showwarning("Warning", "Select a task to delete!")

if __name__ == "__main__":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()

